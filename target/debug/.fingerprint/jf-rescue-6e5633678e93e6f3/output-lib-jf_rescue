{"$message_type":"diagnostic","message":"unresolved import `jf_commitment::CommitmentScheme`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":438,"byte_end":469,"line_start":11,"line_end":11,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use jf_commitment::CommitmentScheme;","highlight_start":5,"highlight_end":36}],"label":"no `CommitmentScheme` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `jf_commitment::CommitmentScheme`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse jf_commitment::CommitmentScheme;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CommitmentScheme` in the root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1526,"byte_end":1542,"line_start":42,"line_end":42,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"        r: Option<&Self::Randomness>,","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if there were a trait named `Example` with associated type `Randomness` implemented for `FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE>`, you could use the fully-qualified path","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1526,"byte_end":1542,"line_start":42,"line_end":42,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"        r: Option<&Self::Randomness>,","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as Example>::Randomness","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:42:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        r: Option<&Self::Randomness>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if there were a trait named `Example` with associated type `Randomness` implemented for `FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE>`, you could use the fully-qualified path\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        r: Option<&\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as Example>::Randomness\u001b[0m\u001b[0m>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as BitOr>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as IntoFuture>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as generic_array::arr::AddLength>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::BitDiff>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsGreaterOrEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsGreaterPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsLessOrEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsLessPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsNotEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivateIntegerAdd>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivatePow>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivateSub>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::ShiftDiff>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::Trim>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Gcd>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsGreater>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsGreaterOrEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsLess>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsLessOrEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsNotEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Logarithm2>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::PartialDiv>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Pow>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Same>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::SquareRoot>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1561,"byte_end":1573,"line_start":43,"line_end":43,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::uint::SetBit>::Output","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:43:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<Self::Output, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as BitOr>::Output\u001b[0m\u001b[0m, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as IntoFuture>::Output\u001b[0m\u001b[0m, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as generic_array::arr::AddLength>::Output\u001b[0m\u001b[0m, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::BitDiff>::Output\u001b[0m\u001b[0m, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m     and 24 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1575,"byte_end":1586,"line_start":43,"line_end":43,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1575,"byte_end":1586,"line_start":43,"line_end":43,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryFrom>::Error","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":1575,"byte_end":1586,"line_start":43,"line_end":43,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    ) -> Result<Self::Output, Self::Error> {","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryInto>::Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:43:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<Self::Output, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<Self::Output, \u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryFrom>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<Self::Output, \u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryInto>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2027,"byte_end":2043,"line_start":55,"line_end":55,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"        r: Option<&Self::Randomness>,","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if there were a trait named `Example` with associated type `Randomness` implemented for `FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE>`, you could use the fully-qualified path","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2027,"byte_end":2043,"line_start":55,"line_end":55,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"        r: Option<&Self::Randomness>,","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as Example>::Randomness","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:55:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        r: Option<&Self::Randomness>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if there were a trait named `Example` with associated type `Randomness` implemented for `FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE>`, you could use the fully-qualified path\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        r: Option<&\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as Example>::Randomness\u001b[0m\u001b[0m>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as BitOr>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as IntoFuture>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as generic_array::arr::AddLength>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::BitDiff>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsGreaterOrEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsGreaterPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsLessOrEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsLessPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::IsNotEqualPrivate>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivateIntegerAdd>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivatePow>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::PrivateSub>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::ShiftDiff>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::Trim>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Gcd>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsGreater>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsGreaterOrEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsLess>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsLessOrEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::IsNotEqual>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Logarithm2>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::PartialDiv>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Pow>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::Same>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::type_operators::SquareRoot>::Output","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2061,"byte_end":2073,"line_start":56,"line_end":56,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        comm: &Self::Output,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::uint::SetBit>::Output","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:56:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        comm: &Self::Output,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        comm: &\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as BitOr>::Output\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        comm: &\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as IntoFuture>::Output\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        comm: &\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as generic_array::arr::AddLength>::Output\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        comm: &\u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as typenum::private::BitDiff>::Output\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m     and 24 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2111,"byte_end":2122,"line_start":57,"line_end":57,"column_start":37,"column_end":48,"is_primary":true,"text":[{"text":"    ) -> Result<VerificationResult, Self::Error> {","highlight_start":37,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2111,"byte_end":2122,"line_start":57,"line_end":57,"column_start":37,"column_end":48,"is_primary":true,"text":[{"text":"    ) -> Result<VerificationResult, Self::Error> {","highlight_start":37,"highlight_end":48}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryFrom>::Error","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs","byte_start":2111,"byte_end":2122,"line_start":57,"line_end":57,"column_start":37,"column_end":48,"is_primary":true,"text":[{"text":"    ) -> Result<VerificationResult, Self::Error> {","highlight_start":37,"highlight_end":48}],"label":null,"suggested_replacement":"<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryInto>::Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chenpinhao/.cargo/git/checkouts/jellyfish-aebafe050ee5960c/7d71dbe/rescue/src/commitment.rs:57:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<VerificationResult, Self::Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<VerificationResult, \u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryFrom>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<VerificationResult, \u001b[0m\u001b[0m\u001b[38;5;10m<FixedLengthRescueCommitment<F, INPUT_LEN, INPUT_LEN_PLUS_ONE> as TryInto>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 7 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 7 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0223, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0223, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0223`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0223`.\u001b[0m\n"}
