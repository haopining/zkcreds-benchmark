{"$message_type":"diagnostic","message":"unresolved import `ark_bn254`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/simple_expiry.rs","byte_start":131,"byte_end":140,"line_start":5,"line_end":5,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use ark_bn254::{Bn254, Fq as Fq254};","highlight_start":5,"highlight_end":14}],"label":"maybe a missing crate `ark_bn254`?","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding `extern crate ark_bn254` to use the `ark_bn254` crate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `ark_bn254`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ark_bn254::{Bn254, Fq as Fq254};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmaybe a missing crate `ark_bn254`?\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `extern crate ark_bn254` to use the `ark_bn254` crate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ark_ff::Field`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":4,"byte_end":17,"line_start":1,"line_end":1,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use ark_ff::Field;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use ark_ff::Field;","highlight_start":1,"highlight_end":19},{"text":"use haopining_merkle_tree::append_only::MerkleTree;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ark_ff::Field`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ark_ff::Field;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `haopining_merkle_tree::append_only::MerkleTree`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":23,"byte_end":69,"line_start":2,"line_end":2,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"use haopining_merkle_tree::append_only::MerkleTree;","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":19,"byte_end":71,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use haopining_merkle_tree::append_only::MerkleTree;","highlight_start":1,"highlight_end":52},{"text":"use core::hash;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `haopining_merkle_tree::append_only::MerkleTree`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse haopining_merkle_tree::append_only::MerkleTree;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":75,"byte_end":85,"line_start":3,"line_end":3,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"use core::hash;","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":71,"byte_end":87,"line_start":3,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use core::hash;","highlight_start":1,"highlight_end":16},{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::hash`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::hash;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Fq` and `Fr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":118,"byte_end":120,"line_start":4,"line_end":4,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":122,"byte_end":124,"line_start":4,"line_end":4,"column_start":36,"column_end":38,"is_primary":true,"text":[{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":36,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":106,"byte_end":107,"line_start":4,"line_end":4,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":116,"byte_end":124,"line_start":4,"line_end":4,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":124,"byte_end":125,"line_start":4,"line_end":4,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"use ark_bls12_381::{Bls12_381, Fr, Fq};","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Fq` and `Fr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:4:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ark_bls12_381::{Bls12_381, Fr, Fq};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `criterion::Criterion`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":168,"byte_end":188,"line_start":6,"line_end":6,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use criterion::Criterion;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":164,"byte_end":190,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use criterion::Criterion;","highlight_start":1,"highlight_end":26},{"text":"use jf_merkle_tree::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `criterion::Criterion`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse criterion::Criterion;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `MerkleProof` and `UniversalMerkleTreeScheme`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":344,"byte_end":355,"line_start":9,"line_end":9,"column_start":69,"column_end":80,"is_primary":true,"text":[{"text":"    prelude::{MerkleCommitment, MerkleTreeScheme, RescueMerkleTree, MerkleProof, UniversalMerkleTreeScheme}};","highlight_start":69,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":357,"byte_end":382,"line_start":9,"line_end":9,"column_start":82,"column_end":107,"is_primary":true,"text":[{"text":"    prelude::{MerkleCommitment, MerkleTreeScheme, RescueMerkleTree, MerkleProof, UniversalMerkleTreeScheme}};","highlight_start":82,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":342,"byte_end":382,"line_start":9,"line_end":9,"column_start":67,"column_end":107,"is_primary":true,"text":[{"text":"    prelude::{MerkleCommitment, MerkleTreeScheme, RescueMerkleTree, MerkleProof, UniversalMerkleTreeScheme}};","highlight_start":67,"highlight_end":107}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `MerkleProof` and `UniversalMerkleTreeScheme`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:9:69\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    prelude::{MerkleCommitment, MerkleTreeScheme, RescueMerkleTree, MerkleProof, UniversalMerkleTreeScheme}};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Arithmetization` and `Variable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":628,"byte_end":643,"line_start":16,"line_end":16,"column_start":19,"column_end":34,"is_primary":true,"text":[{"text":"use jf_relation::{Arithmetization, Circuit, gadgets::ecc::SWToTEConParam, PlonkCircuit, Variable};","highlight_start":19,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":698,"byte_end":706,"line_start":16,"line_end":16,"column_start":89,"column_end":97,"is_primary":true,"text":[{"text":"use jf_relation::{Arithmetization, Circuit, gadgets::ecc::SWToTEConParam, PlonkCircuit, Variable};","highlight_start":89,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":628,"byte_end":645,"line_start":16,"line_end":16,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"use jf_relation::{Arithmetization, Circuit, gadgets::ecc::SWToTEConParam, PlonkCircuit, Variable};","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":696,"byte_end":706,"line_start":16,"line_end":16,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"use jf_relation::{Arithmetization, Circuit, gadgets::ecc::SWToTEConParam, PlonkCircuit, Variable};","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Arithmetization` and `Variable`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:16:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse jf_relation::{Arithmetization, Circuit, gadgets::ecc::SWToTEConParam, PlonkCircuit, Variable};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `PlonkKzgSnark`, `UniversalSNARK`, `errors::PlonkError`, and `transcript::StandardTranscript`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/simple_expiry.rs","byte_start":761,"byte_end":779,"line_start":19,"line_end":19,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    errors::PlonkError,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":800,"byte_end":813,"line_start":20,"line_end":20,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    proof_system::{PlonkKzgSnark, UniversalSNARK},","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":815,"byte_end":829,"line_start":20,"line_end":20,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"    proof_system::{PlonkKzgSnark, UniversalSNARK},","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":836,"byte_end":866,"line_start":21,"line_end":21,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"    transcript::StandardTranscript,","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/simple_expiry.rs","byte_start":741,"byte_end":871,"line_start":18,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use jf_plonk::{","highlight_start":1,"highlight_end":16},{"text":"    errors::PlonkError,","highlight_start":1,"highlight_end":24},{"text":"    proof_system::{PlonkKzgSnark, UniversalSNARK},","highlight_start":1,"highlight_end":51},{"text":"    transcript::StandardTranscript,","highlight_start":1,"highlight_end":36},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"use ark_ed_on_bls12_381::Fq as FqEd381;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PlonkKzgSnark`, `UniversalSNARK`, `errors::PlonkError`, and `transcript::StandardTranscript`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    errors::PlonkError,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    proof_system::{PlonkKzgSnark, UniversalSNARK},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    transcript::StandardTranscript,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<Bls12<Config> as Pairing>::BaseField == Fp<MontBackend<FrConfig, 4>, 4>`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1053,"byte_end":1062,"line_start":32,"line_end":32,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();","highlight_start":34,"highlight_end":43}],"label":"expected `Fp<MontBackend<FrConfig, 4>, 4>`, found `Fp<MontBackend<FqConfig, 6>, 6>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>`\n   found struct `ark_ff::Fp<MontBackend<ark_bls12_381::FqConfig, 6>, 6>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `gen_test_mt_gadget_circuit`","code":null,"level":"note","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1090,"byte_end":1116,"line_start":36,"line_end":36,"column_start":8,"column_end":34,"is_primary":false,"text":[{"text":"pub fn gen_test_mt_gadget_circuit<E, F, P>()","highlight_start":8,"highlight_end":34}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":1149,"byte_end":1162,"line_start":38,"line_end":38,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    E: Pairing<BaseField = F, G1Affine = Affine<P>>,","highlight_start":16,"highlight_end":29}],"label":"required by this bound in `gen_test_mt_gadget_circuit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<Bls12<Config> as Pairing>::BaseField == Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:32:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Fp<MontBackend<FrConfig, 4>, 4>`, found `Fp<MontBackend<FqConfig, 6>, 6>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `ark_ff::Fp<MontBackend<ark_bls12_381::\u001b[0m\u001b[0m\u001b[1m\u001b[35mFrConfig\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35m4\u001b[0m\u001b[0m>, \u001b[0m\u001b[0m\u001b[1m\u001b[35m4\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found struct `ark_ff::Fp<MontBackend<ark_bls12_381::\u001b[0m\u001b[0m\u001b[1m\u001b[35mFqConfig\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35m6\u001b[0m\u001b[0m>, \u001b[0m\u001b[0m\u001b[1m\u001b[35m6\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:38:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn gen_test_mt_gadget_circuit<E, F, P>()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    E: Pairing<BaseField = F, G1Affine = Affine<P>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>: SWToTEConParam` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1064,"byte_end":1071,"line_start":32,"line_end":32,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();","highlight_start":45,"highlight_end":52}],"label":"the trait `SWToTEConParam` is not implemented for `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `SWToTEConParam`:\n  ark_ff::Fp<MontBackend<ark_bls12_377::fields::fq::FqConfig, 6>, 6>\n  ark_ff::Fp<MontBackend<ark_bls12_381::FqConfig, 6>, 6>\n  ark_ff::Fp<MontBackend<ark_bn254::fields::fq::FqConfig, 4>, 4>\n  ark_ff::Fp<MontBackend<ark_bw6_761::fields::fq::FqConfig, 12>, 12>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `gen_test_mt_gadget_circuit`","code":null,"level":"note","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1090,"byte_end":1116,"line_start":36,"line_end":36,"column_start":8,"column_end":34,"is_primary":false,"text":[{"text":"pub fn gen_test_mt_gadget_circuit<E, F, P>()","highlight_start":8,"highlight_end":34}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":1212,"byte_end":1226,"line_start":39,"line_end":39,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    F: RescueParameter + SWToTEConParam,","highlight_start":26,"highlight_end":40}],"label":"required by this bound in `gen_test_mt_gadget_circuit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>: SWToTEConParam` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:32:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `SWToTEConParam` is not implemented for `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `SWToTEConParam`:\u001b[0m\n\u001b[0m             ark_ff::Fp<MontBackend<ark_bls12_377::fields::fq::FqConfig, 6>, 6>\u001b[0m\n\u001b[0m             ark_ff::Fp<MontBackend<ark_bls12_381::FqConfig, 6>, 6>\u001b[0m\n\u001b[0m             ark_ff::Fp<MontBackend<ark_bn254::fields::fq::FqConfig, 4>, 4>\u001b[0m\n\u001b[0m             ark_ff::Fp<MontBackend<ark_bw6_761::fields::fq::FqConfig, 12>, 12>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:39:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn gen_test_mt_gadget_circuit<E, F, P>()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    F: RescueParameter + SWToTEConParam,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch resolving `<Config as CurveConfig>::BaseField == Fp<MontBackend<FrConfig, 4>, 4>`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1073,"byte_end":1074,"line_start":32,"line_end":32,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();","highlight_start":54,"highlight_end":55}],"label":"expected `Fp<MontBackend<FrConfig, 4>, 4>`, found `Fp<MontBackend<FqConfig, 6>, 6>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `ark_ff::Fp<MontBackend<ark_bls12_381::FrConfig, 4>, 4>`\n   found struct `ark_ff::Fp<MontBackend<ark_bls12_381::FqConfig, 6>, 6>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `gen_test_mt_gadget_circuit`","code":null,"level":"note","spans":[{"file_name":"src/simple_expiry.rs","byte_start":1090,"byte_end":1116,"line_start":36,"line_end":36,"column_start":8,"column_end":34,"is_primary":false,"text":[{"text":"pub fn gen_test_mt_gadget_circuit<E, F, P>()","highlight_start":8,"highlight_end":34}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simple_expiry.rs","byte_start":1249,"byte_end":1262,"line_start":40,"line_end":40,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    P: SWCurveConfig<BaseField = F>,","highlight_start":22,"highlight_end":35}],"label":"required by this bound in `gen_test_mt_gadget_circuit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m: type mismatch resolving `<Config as CurveConfig>::BaseField == Fp<MontBackend<FrConfig, 4>, 4>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:32:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gen_test_mt_gadget_circuit::<Bls12_381, FqEd381, _>();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Fp<MontBackend<FrConfig, 4>, 4>`, found `Fp<MontBackend<FqConfig, 6>, 6>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `ark_ff::Fp<MontBackend<ark_bls12_381::\u001b[0m\u001b[0m\u001b[1m\u001b[35mFrConfig\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35m4\u001b[0m\u001b[0m>, \u001b[0m\u001b[0m\u001b[1m\u001b[35m4\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found struct `ark_ff::Fp<MontBackend<ark_bls12_381::\u001b[0m\u001b[0m\u001b[1m\u001b[35mFqConfig\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35m6\u001b[0m\u001b[0m>, \u001b[0m\u001b[0m\u001b[1m\u001b[35m6\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simple_expiry.rs:40:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn gen_test_mt_gadget_circuit<E, F, P>()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    P: SWCurveConfig<BaseField = F>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `gen_test_mt_gadget_circuit`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors; 8 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors; 8 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0271, E0277, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0271, E0277, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0271`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0271`.\u001b[0m\n"}
